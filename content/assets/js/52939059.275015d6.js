"use strict";(self.webpackChunkrocketmq_docs=self.webpackChunkrocketmq_docs||[]).push([[61],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,d=u["".concat(i,".").concat(m)]||u[m]||k[m]||a;return n?o.createElement(d,c(c({ref:t},p),{},{components:n})):o.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:r,c[1]=l;for(var s=2;s<a;s++)c[s]=n[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},39865:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>k,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={},c="RocketMQ Connect  Quick Start",l={unversionedId:"connect/03RocketMQ Connect Quick Start",id:"version-5.0/connect/03RocketMQ Connect Quick Start",title:"RocketMQ Connect  Quick Start",description:"In standalone mode, [rocketmq-connect-sample] serves as a demo.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-5.0/10-connect/03RocketMQ Connect Quick Start.md",sourceDirName:"10-connect",slug:"/connect/03RocketMQ Connect Quick Start",permalink:"/docs/connect/03RocketMQ Connect Quick Start",draft:!1,editUrl:"https://github.com/apache/rocketmq-site/tree/new-official-website/versioned_docs/version-5.0/10-connect/03RocketMQ Connect Quick Start.md",tags:[],version:"5.0",frontMatter:{},sidebar:"version-5.0/myAutogeneratedSidebar",previous:{title:"RocketMQ Connect Concept",permalink:"/docs/connect/02RocketMQ Connect Concept"},next:{title:"RocketMQ Connect in Action 1",permalink:"/docs/connect/04RocketMQ Connect In Action1"}},i={},s=[{value:"1. Prepare",id:"1-prepare",level:2},{value:"2. Build Connect",id:"2-build-connect",level:2},{value:"3. Run Worker",id:"3-run-worker",level:2},{value:"4. Start source connector",id:"4-start-source-connector",level:2},{value:"source connector configuration instructions",id:"source-connector-configuration-instructions",level:4},{value:"5. Start sink connector",id:"5-start-sink-connector",level:2},{value:"sink connector configuration instructions",id:"sink-connector-configuration-instructions",level:4},{value:"6. Stop connector",id:"6-stop-connector",level:2},{value:"7. Stopping the Worker process",id:"7-stopping-the-worker-process",level:2},{value:"8. Log directory",id:"8-log-directory",level:2},{value:"9. Configuration file",id:"9-configuration-file",level:2},{value:"10. Configuration Instructions",id:"10-configuration-instructions",level:2}],p={toc:s},u="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rocketmq-connect--quick-start"},"RocketMQ Connect  Quick Start"),(0,r.kt)("h1",{id:"quick-start"},"Quick Start"),(0,r.kt)("p",null,"In standalone mode, ","[rocketmq-connect-sample]"," serves as a demo."),(0,r.kt)("p",null,"The main purpose of rocketmq-connect-sample is to read data from a source file and send it to a RocketMQ cluster, and then read messages from the Topic and write them to a target file."),(0,r.kt)("h2",{id:"1-prepare"},"1. Prepare"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Linux/Unix/Mac"),(0,r.kt)("li",{parentName:"ol"},"64bit JDK 1.8+;"),(0,r.kt)("li",{parentName:"ol"},"Maven 3.2.x+;"),(0,r.kt)("li",{parentName:"ol"},"Start ",(0,r.kt)("a",{parentName:"li",href:"https://rocketmq.apache.org/docs/quick-start/"},"RocketMQ"),";"),(0,r.kt)("li",{parentName:"ol"},"Create test Topic")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"sh ${ROCKETMQ_HOME}/bin/mqadmin updateTopic -t fileTopic -n localhost:9876 -c DefaultCluster -r 8 -w 8")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"tips")," : ${ROCKETMQ_HOME} locational instructions"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"bin-release.zip  version\uff1a/rocketmq-all-4.9.4-bin-release"),(0,r.kt)("p",{parentName:"blockquote"},"source-release.zip version\uff1a/rocketmq-all-4.9.4-source-release/distribution")),(0,r.kt)("h2",{id:"2-build-connect"},"2. Build Connect"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git clone https://github.com/apache/rocketmq-connect.git\n\ncd  rocketmq-connect\n\nmvn -Prelease-connect -DskipTests clean install -U\n\n")),(0,r.kt)("h2",{id:"3-run-worker"},"3. Run Worker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd distribution/target/rocketmq-connect-0.0.1-SNAPSHOT/rocketmq-connect-0.0.1-SNAPSHOT\n\nsh bin/connect-standalone.sh -c conf/connect-standalone.conf &\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"tips"),": The JVM Parameters Configuration can be adjusted in /bin/runconnect.sh as needed."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'JAVA_OPT="${JAVA_OPT} -server -Xms256m -Xmx256m"')),(0,r.kt)("p",null,"runtime start successful\uff1a"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The standalone worker boot success.")),(0,r.kt)("p",null,"View the startup log files."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"tail -100f ~/logs/rocketmqconnect/connect_runtime.log")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ctrl + c"),"  exit log"),(0,r.kt)("h2",{id:"4-start-source-connector"},"4. Start source connector"),(0,r.kt)("p",null,"Create a test file named test-source-file.txt in the current directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'touch test-source-file.txt\n\necho "Hello \\r\\nRocketMQ\\r\\n Connect" >> test-source-file.txt\n\ncurl -X POST -H "Content-Type: application/json" http://127.0.0.1:8082/connectors/fileSourceConnector -d \'{"connector.class":"org.apache.rocketmq.connect.file.FileSourceConnector","filename":"test-source-file.txt","connect.topicname":"fileTopic"}\'\n')),(0,r.kt)("p",null,"If you see the following log message, it means the file source connector has started successfully."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"tail -100f ~/logs/rocketmqconnect/connect_runtime.log"),(0,r.kt)("p",{parentName:"blockquote"},"2019-07-16 11:18:39 INFO pool-7-thread-1 - ",(0,r.kt)("strong",{parentName:"p"},"Source task start"),', config:{"properties":{"source-record-...')),(0,r.kt)("h4",{id:"source-connector-configuration-instructions"},"source connector configuration instructions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"key"),(0,r.kt)("th",{parentName:"tr",align:null},"nullable"),(0,r.kt)("th",{parentName:"tr",align:null},"default"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connector.class"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The class name (including the package name) that implements the Connector interface")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filename"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"source file name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connect.topicname"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Topic required for synchronizing file data")))),(0,r.kt)("h2",{id:"5-start-sink-connector"},"5. Start sink connector"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'curl -X POST -H "Content-Type: application/json" http://127.0.0.1:8082/connectors/fileSinkConnector -d \'{"connector.class":"org.apache.rocketmq.connect.file.FileSinkConnector","filename":"test-sink-file.txt","connect.topicnames":"fileTopic"}\'\n\ncat test-sink-file.txt\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"tail -100f ~/logs/rocketmqconnect/connect_runtime.log")),(0,r.kt)("p",null,"If you see the following log message, it means the file sink connector has started successfully."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"2019-07-16 11:24:58 INFO pool-7-thread-2 - ",(0,r.kt)("strong",{parentName:"p"},"Sink task start"),', config:{"properties":{"source-record-...')),(0,r.kt)("p",null,"If test-sink-file.txt is generated and its content is the same as source-file.txt, it means that the entire process is running normally."),(0,r.kt)("p",null,"The file contents may be in a different order, which is normal because the order of messages received from different queues in RocketMQ may also be inconsistent."),(0,r.kt)("h4",{id:"sink-connector-configuration-instructions"},"sink connector configuration instructions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"key"),(0,r.kt)("th",{parentName:"tr",align:null},"nullable"),(0,r.kt)("th",{parentName:"tr",align:null},"default"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connector.class"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The class name (including the package name) that implements the Connector interface")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filename"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The sink pulls data and saves it to a file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connect.topicnames"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The topics of the data messages that the sink needs to process.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Tips:The configuration file instructions for the sample rocketmq-connect-sample are for reference only, different source/sink connectors have different configurations, please refer to the specific source/sink connector.\n")),(0,r.kt)("h2",{id:"6-stop-connector"},"6. Stop connector"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"#GET request  \nhttp://(your worker ip):(port)/connectors/(connector name)/stop\n\n#Stopping the two connectors in the demo\ncurl     http://127.0.0.1:8082/connectors/fileSinkConnector/stop\ncurl     http://127.0.0.1:8082/connectors/fileSourceConnector/stop\n    \n")),(0,r.kt)("p",null,"Seeing the following log message indicates that the connector has been successfully stopped."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Source task stop"),', config:{"properties":{"source-record-converter":"org.apache.rocketmq.connect.runtime.converter.JsonConverter","filename":"/home/zhoubo/IdeaProjects/my-new3-rocketmq-externals/rocketmq-connect/rocketmq-connect-runtime/source-file.txt","task-class":"org.apache.rocketmq.connect.file.FileSourceTask","topic":"fileTopic","connector-class":"org.apache.rocketmq.connect.file.FileSourceConnector","update-timestamp":"1564765189322"}}')),(0,r.kt)("h2",{id:"7-stopping-the-worker-process"},"7. Stopping the Worker process"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sh bin/connectshutdown.sh\n")),(0,r.kt)("h2",{id:"8-log-directory"},"8. Log directory"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"${user.home}/logs/rocketmqconnect")),(0,r.kt)("h2",{id:"9-configuration-file"},"9. Configuration file"),(0,r.kt)("p",null,"The default directory for persistent configuration files is /tmp/storeRoot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"key"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connectorConfig.json"),(0,r.kt)("td",{parentName:"tr",align:null},"Connector configuration persistence files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"position.json"),(0,r.kt)("td",{parentName:"tr",align:null},"Source connect data processing progress persistence files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"taskConfig.json"),(0,r.kt)("td",{parentName:"tr",align:null},"Task configuration persistence files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"offset.json"),(0,r.kt)("td",{parentName:"tr",align:null},"Sink connect data consumption progress persistence files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connectorStatus.json"),(0,r.kt)("td",{parentName:"tr",align:null},"Connector status persistence files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"taskStatus.json"),(0,r.kt)("td",{parentName:"tr",align:null},"Task status persistence files")))),(0,r.kt)("h2",{id:"10-configuration-instructions"},"10. Configuration Instructions"),(0,r.kt)("p",null,"Modify the RESTful port, storeRoot path, Nameserver address, and other information based on your usage."),(0,r.kt)("p",null,"The file location is in the conf/connect-standalone.conf under the work startup directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"#current cluster node uniquely identifies\nworkerId=DEFAULT_WORKER_1\n\n# Http prot for user to access REST API\nhttpPort=8082\n\n# Local file dir for config store\nstorePathRootDir=/home/connect/storeRoot\n\n#You need to modify it to your own rocketmq nameserver endpoint.\n# RocketMQ namesrvAddr\nnamesrvAddr=127.0.0.1:9876  \n\n#This is used for loading Connector plugins, similar to how JVM loads jar packages or classes at startup. This directory is used for placing Connector-related implementation plugins and supports both files and directories.\n# Source or sink connector jar file dir\npluginPaths=rocketmq-connect-sample/target/rocketmq-connect-sample-0.0.1-SNAPSHOT.jar\n\n# Addition : put the Connector-related implementation plugins in the specified folder.\n# pluginPaths=/usr/local/connector-plugins/*\n")))}k.isMDXComponent=!0}}]);