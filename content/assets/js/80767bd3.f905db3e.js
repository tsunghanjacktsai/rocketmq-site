"use strict";(self.webpackChunkrocketmq_docs=self.webpackChunkrocketmq_docs||[]).push([[5392],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,g=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(96540),o=n(20053);const a={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.A)(a.tabItem,i),hidden:n},t)}},11470:(e,t,n)=>{n.d(t,{A:()=>q});var r=n(58168),o=n(96540),a=n(20053),i=n(23104),s=n(56347),c=n(57485),l=n(31682),u=n(89466);function p(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:o}}=e;return{value:t,label:n,attributes:r,default:o}}))}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,s.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=m(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[c,l]=g({queryString:n,groupId:r}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,u.Dv)(n);return[r,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),f=(()=>{const e=c??p;return d({value:e,tabValues:a})?e:null})();(0,o.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),l(e),h(e)}),[l,h,a]),tabValues:a}}var f=n(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:s,selectValue:c,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.a_)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),r=l[n].value;r!==s&&(p(t),c(r))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,r.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},i,{className:(0,a.A)("tabs__item",y.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=h(e);return o.createElement("div",{className:(0,a.A)("tabs-container",y.tabList)},o.createElement(v,(0,r.A)({},e,t)),o.createElement(b,(0,r.A)({},e,t)))}function q(e){const t=(0,f.A)();return o.createElement(k,(0,r.A)({key:String(t)},e))}},27564:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=n(58168),o=(n(96540),n(15680)),a=n(11470),i=n(19365);const s={},c="Run RocketMQ with Docker Compose",l={unversionedId:"quickStart/03quickstartWithDockercompose",id:"version-5.0/quickStart/03quickstartWithDockercompose",title:"Run RocketMQ with Docker Compose",description:"This section introduces how to quickly deploy a single-node, single-replica RocketMQ service using Docker-compose and complete simple message sending and receiving.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-5.0/02-quickStart/03quickstartWithDockercompose.md",sourceDirName:"02-quickStart",slug:"/quickStart/03quickstartWithDockercompose",permalink:"/docs/quickStart/03quickstartWithDockercompose",draft:!1,editUrl:"https://github.com/apache/rocketmq-site/tree/new-official-website/versioned_docs/version-5.0/02-quickStart/03quickstartWithDockercompose.md",tags:[],version:"5.0",frontMatter:{},sidebar:"version-5.0/myAutogeneratedSidebar",previous:{title:"Run RocketMQ in Docker",permalink:"/docs/quickStart/02quickstartWithDocker"},next:{title:"Run RocketMQ with Kubernetes",permalink:"/docs/quickStart/04quickstartWithHelmInKubernetes"}},u={},p=[{value:"1. Write docker-compose",id:"1-write-docker-compose",level:2},{value:"2.Start RocketMQ cluster",id:"2start-rocketmq-cluster",level:2},{value:"3.Send and Receive Messages with SDK",id:"3send-and-receive-messages-with-sdk",level:2},{value:"4.Stop all services",id:"4stop-all-services",level:2}],m={toc:p},d="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"run-rocketmq-with-docker-compose"},"Run RocketMQ with Docker Compose"),(0,o.yg)("p",null,"This section introduces how to quickly deploy a single-node, single-replica RocketMQ service using Docker-compose and complete simple message sending and receiving."),(0,o.yg)("admonition",{title:"System Requirements",type:"tip"},(0,o.yg)("ol",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ol"},"64-bit operating system"),(0,o.yg)("li",{parentName:"ol"},"64-bit JDK 1.8+"))),(0,o.yg)("h2",{id:"1-write-docker-compose"},"1. Write docker-compose"),(0,o.yg)("p",null,"To quickly start and run the RocketMQ cluster, you can use the following template to create a docker-compose.yml file by modifying or adding configurations in the environment section."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},"version: '3.8'\nservices:\n  namesrv:\n    image: apache/rocketmq:5.3.0\n    container_name: rmqnamesrv\n    ports:\n      - 9876:9876\n    networks:\n      - rocketmq\n    command: sh mqnamesrv\n  broker:\n    image: apache/rocketmq:5.3.0\n    container_name: rmqbroker\n    ports:\n      - 10909:10909\n      - 10911:10911\n      - 10912:10912\n    environment:\n      - NAMESRV_ADDR=rmqnamesrv:9876\n    depends_on:\n      - namesrv\n    networks:\n      - rocketmq\n    command: sh mqbroker\n  proxy:\n    image: apache/rocketmq:5.3.0\n    container_name: rmqproxy\n    networks:\n      - rocketmq\n    depends_on:\n      - broker\n      - namesrv\n    ports:\n      - 8080:8080\n      - 8081:8081\n    restart: on-failure\n    environment:\n      - NAMESRV_ADDR=rmqnamesrv:9876\n    command: sh mqproxy\nnetworks:\n  rocketmq:\n    driver: bridge\n")),(0,o.yg)("h2",{id:"2start-rocketmq-cluster"},"2.Start RocketMQ cluster"),(0,o.yg)("p",null,"tart all defined services according to the docker-compose.yml file."),(0,o.yg)(a.A,{mdxType:"Tabs"},(0,o.yg)(i.A,{value:"Linux",label:"Linux",default:!0,mdxType:"TabItem"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-code"},"docker-compose up -d\n"))),(0,o.yg)(i.A,{value:"Windows",label:"Windows",mdxType:"TabItem"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-code"},"docker-compose -p rockermq_project up -d\n")))),(0,o.yg)("h2",{id:"3send-and-receive-messages-with-sdk"},"3.Send and Receive Messages with SDK"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"After testing with tools, we can try to send and receive messages using the SDK. Here is an example of using the Java SDK for message sending and receiving. More details can be found at ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/apache/rocketmq-clients"},"rocketmq-clients"),".")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Add the following dependency to the pom.xml file to introduce the Java dependency library, replacing ",(0,o.yg)("inlineCode",{parentName:"p"},"rocketmq-client-java-version")," with ",(0,o.yg)("a",{href:"https://search.maven.org/search?q=g:org.apache.rocketmq%20AND%20a:rocketmq-client-java"},"the latest version"),"."),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.rocketmq</groupId>\n    <artifactId>rocketmq-client-java</artifactId>\n    <version>${rocketmq-client-java-version}</version>\n</dependency> \n"))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Enter the broker container and create a Topic using mqadmin."),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"$ docker exec -it rmqbroker bash\n$ sh mqadmin updatetopic -t TestTopic -c DefaultCluster\n"))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"In the created Java project, create and run a program to send a normal message. The sample code is as follows:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-java"},'import org.apache.rocketmq.client.apis.ClientConfiguration;\nimport org.apache.rocketmq.client.apis.ClientConfigurationBuilder;\nimport org.apache.rocketmq.client.apis.ClientException;\nimport org.apache.rocketmq.client.apis.ClientServiceProvider;\nimport org.apache.rocketmq.client.apis.message.Message;\nimport org.apache.rocketmq.client.apis.producer.Producer;\nimport org.apache.rocketmq.client.apis.producer.SendReceipt;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class ProducerExample {\n    private static final Logger logger = LoggerFactory.getLogger(ProducerExample.class);\n\n    public static void main(String[] args) throws ClientException {\n        // Endpoint address, set to the Proxy address and port list, usually xxx:8080;xxx:8081\n        String endpoint = "localhost:8081";\n        // The target Topic name for message sending, which needs to be created in advance.\n        String topic = "TestTopic";\n        ClientServiceProvider provider = ClientServiceProvider.loadService();\n        ClientConfigurationBuilder builder = ClientConfiguration.newBuilder().setEndpoints(endpoint);\n        ClientConfiguration configuration = builder.build();\n        // When initializing Producer, communication configuration and pre-bound Topic need to be set.\n        Producer producer = provider.newProducerBuilder()\n            .setTopics(topic)\n            .setClientConfiguration(configuration)\n            .build();\n        // Sending a normal message.\n        Message message = provider.newMessageBuilder()\n            .setTopic(topic)\n            // Set the message index key, which can be used to accurately find a specific message.\n            .setKeys("messageKey")\n            // Set the message Tag, used by the consumer to filter messages by specified Tag.\n            .setTag("messageTag")\n            // Message body.\n            .setBody("messageBody".getBytes())\n            .build();\n        try {\n            // Send the message, paying attention to the sending result and catching exceptions.\n            SendReceipt sendReceipt = producer.send(message);\n            logger.info("Send message successfully, messageId={}", sendReceipt.getMessageId());\n        } catch (ClientException e) {\n            logger.error("Failed to send message", e);\n        }\n        // producer.close();\n    }\n}\n'))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"In the created Java project, create and run a program to subscribe to normal messages. Apache RocketMQ supports both ",(0,o.yg)("a",{parentName:"p",href:"https://rocketmq.apache.org/zh/docs/featureBehavior/06consumertype"},"SimpleConsumer")," and ",(0,o.yg)("a",{parentName:"p",href:"https://rocketmq.apache.org/zh/docs/featureBehavior/06consumertype"},"PushConsumer")," types of consumers. You can choose either method to subscribe to messages."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},'import java.io.IOException;\nimport java.util.Collections;\nimport org.apache.rocketmq.client.apis.ClientConfiguration;\nimport org.apache.rocketmq.client.apis.ClientException;\nimport org.apache.rocketmq.client.apis.ClientServiceProvider;\nimport org.apache.rocketmq.client.apis.consumer.ConsumeResult;\nimport org.apache.rocketmq.client.apis.consumer.FilterExpression;\nimport org.apache.rocketmq.client.apis.consumer.FilterExpressionType;\nimport org.apache.rocketmq.client.apis.consumer.PushConsumer;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class PushConsumerExample {\n    private static final Logger logger = LoggerFactory.getLogger(PushConsumerExample.class);\n\n    private PushConsumerExample() {\n    }\n\n    public static void main(String[] args) throws ClientException, IOException, InterruptedException {\n        final ClientServiceProvider provider = ClientServiceProvider.loadService();\n        // Endpoint address, set to the Proxy address and port list, usually xxx:8080;xxx:8081\n        String endpoints = "localhost:8081";\n        ClientConfiguration clientConfiguration = ClientConfiguration.newBuilder()\n            .setEndpoints(endpoints)\n            .build();\n        // Subscription message filtering rule, indicating subscription to all Tag messages.\n        String tag = "*";\n        FilterExpression filterExpression = new FilterExpression(tag, FilterExpressionType.TAG);\n        // Specify the consumer group the consumer belongs to, Group needs to be created in advance.\n        String consumerGroup = "YourConsumerGroup";\n        // Specify which target Topic to subscribe to, Topic needs to be created in advance.\n        String topic = "TestTopic";\n        // Initialize PushConsumer\n        PushConsumer pushConsumer = provider.newPushConsumerBuilder()\n            .setClientConfiguration(clientConfiguration)\n            // Set the consumer group.\n            .setConsumerGroup(consumerGroup)\n            // Set pre-bound subscription relationship.\n            .setSubscriptionExpressions(Collections.singletonMap(topic, filterExpression))\n            // Set the message listener.\n            .setMessageListener(messageView -> {\n                // Handle messages and return the consumption result.\n                logger.info("Consume message successfully, messageId={}", messageView.getMessageId());\n                return ConsumeResult.SUCCESS;\n            })\n            .build();\n        Thread.sleep(Long.MAX_VALUE);\n        // If PushConsumer is no longer needed, this instance can be closed.\n        // pushConsumer.close();\n    }\n}\n\n')),(0,o.yg)("h2",{id:"4stop-all-services"},"4.Stop all services"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"docker-compose down\n")))}g.isMDXComponent=!0}}]);